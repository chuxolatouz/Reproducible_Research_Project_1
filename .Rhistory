install.packages()
install.packages("swirl")
library(swirl)
install_from_swirl("R Programming")
library(datasets)
data("iris")
?iris
mean(iris$Sepal.Length)
apply(iris[,1:4], 2, mean)
apply(iris[,1:4], 1, mean)
apply(iris[,1:4], 2, mean)
rowMeans(iris[,1:4])
data("mtcars")
?mtcars
View(iris)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
split(mtcars, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
split(mtcars, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
split(mtcars, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
lapply(mtcars, mean)
sapply(mtcars, cyl, mean)
apply(mtcars, 2, mean)
4cil <- mtcars$cyl[mtcars$cyl == 4]
cil <- mtcars$cyl[mtcars$cyl == 4]
cil2 <- mtcars$cyl[mtcars$cyl == 8]
cil <- mtcars[mtcars$cyl == 4]
rowMeans(mtcars$cyl)
debug(ls)
ls
?ls
ls(c("a","n"))
exit
a
sda
?abs
?abs
26.66364 - 15.10000
Q
Q
iris[iris$Sepal.Length && iris$Species == 'virginica']
iris[iris$Species == 'virginica']
iris$Species
Q
?browser
Q]
Q
Q
Q
Q
iris]
iris[iris$Species == 'virginica']
Q
library(datasets)
data("iris")
iris[iris$Species === 'virginica']
iris[iris$Species = 'virginica']
iris[iris$Species == 'virginica']
iris[iris$Species]
iris[iris$Species == 'virginica',]
virgi <- iris[iris$Species == 'virginica',]
mean(virgi$Sepal.Length)
apply(iris[, 1:4], 2, mean)
data("mtcars")
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$cyl, mtcars$mpg, mean)
mean(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
abs(26.66364, 15.1)
abs(26.66364 - 15.1)
cil4 <- mtcars[mtcars$cyl == 4,]
cil8 <- mtcars[mtcars$cyl == 8,]
rowMeans(cil4, cil8)
rowMeans(cil4, cil8, na.rm = TRUE)
rowMeans(cil4$hp, cil8$hp, na.rm = TRUE)
mean(cil4$hp)
mean(cil8$hp)
abs(209.2143 - 82.63636)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
with(mtcars, tapply(mpg, cyl, mean))
sapply(split(mtcars$mpg, mtcars$cyl), mean)
swirl()
library(swirl)
swirl()
1:20
c(1,2,3)
c(1:3)
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c('Bill', 'Gina', 'Kelly', 'Sean')
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patients", "age", "weight", "bp", "rating", "test")
c("patients", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames)
colnames(my_data) <- cnames
my_data
install.packages("swirl")
library(swirl)
install_from_swirl("R-programming")
install_from_swirl("R Programming")
install_from_swirl("R Programming")
install_from_swirl("Exploratory Data Analysis")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
library(swirl)
swirl()
install.packages("ggplot2")
swirl()
swirl()
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
bloxplot(ppm, col="blue")
boxplot()
boxplot(ppm)
boxplot(ppm,col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline(v = 12, lwd = 4, col = "magenta")
abline(v = median(ppm), lwd = 4, col = "magenta")
abline(v = median(ppm), col = "magenta", lwd = 4)
hist(ppm, col = "green", names = "pollution")
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg, col="wheat", main ="Number of Counties in Each Region")
boxplot(formula = pm25~region, data = pollution, col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution, g[regio == 'east'])
east <- subset(pollution, region == 'east')
head(east)
hist(east$pm25, col = "green")
west <- subset(pollution, region == 'west')
hist(subset(pollution,region=="west")$pm25, col = "green")
which(pollution,plot(pm25))
which(pollution, plot(pm25))
wasd
which(pollution)
which(pollution)
which()
help
with(pollution, plot(latitude, pm25))
with(pollution, plot(latitude, pm25, lwd=2, lty=2))
abline(h = 12, lwd = 2, lty = 2)
with(pollution, plot(latitude, pm25, col = region))
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution, region == 'west')
plot(west$latitude, west$pm25, main = "West")
east <- subset(pollution, region == 'east')
plot(east$latitude, east$pm25, main = "East")
?Devices
with(faithful, plot(eruptions, awiting))
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, "geiserplot.png")
dev.copy(png, file = "geiserplot.png")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
help
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, c(4,1))
with(state, xyplot(Life.Exp ~ Income | region, c(4,1)))
help
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(mpg$displ,mpg$hwy, data data = mpg)
qplot(mpg$displ,mpg$hwy, data = mpg)
qplot(displ, hwy, data = mpg)
postscript()
?postscript
?xfig
?jpeg
?xfig
?postscript
library(swirl)
swirl()
head(airquality)
xyplot(Ozone,Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality, col = "red",pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data = airquality, layout = c(5, 1))
xyplot(Ozone~Wind | Month, data = airquality, layout = c(5, 1))
p <- xyplot(Ozone~Wind,data=airquality)
print(p)
names(p)
nymanes[myfull]
nynames[myfull]
mynames[myfull]
p[["formula"]]
p[["limits"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout = c(2,1))
v1
v2
myedit("plot1.R")
source("plot1.R", TRUE)
skip
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local=TRUE)
srt(diamonds)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
skip()
source(pathtofile(("myLabels.R")), local = TRUE)
source(pathtofile("myLabels.R"),local=TRUE)
skip()
xyplot(price~carat|color*cut,data=diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
library(swirl)
swirl()
sample(colors(), 10)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3 <- colorRampPalette(c("blue", "green"), alpha = .5)
p3(5)
plot(x,y,pch = 19, col = rgb(0, .5 .5))
plot(x,y,pch = 19, col = rgb(0, .5, .5))
plot(x,y,pch = 19, col = rgb(0, .5, .5, 3))
plot(x,y,pch = 19, col = rgb(0, .5, .5, alpha = 3))
skip()
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
swirl()
library(swirl)
swirl()
str(mpg)
qplot(displ, hwy, mpg)
qplot(displ, hwy,data = mpg)
qplot(displ, hwy,data = mpg, color = drv)
qplot(displ, hwy,data = mpg, color = drv, geom = c("point", "smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwym data = mpg, facets = . ~ drv)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(sR - displ, hwy, data = mpg, geom = c("points", "smooth"), facets = .~drv)
qplot(sR - displ, hwy, data = mpg, geom = c("point", "smooth"), facets = .~drv)
qplot(data - displ, hwy, data = mpg, geom = c("point", "smooth"), facets = .~drv)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = .~drv)
skip()
summary(g)
print(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(. ~ drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(. ~ drv)+ggtitle("Swirl Rules!")
g+geom_point(color = "pink", size = 4, alpha = 1/2)
g+geom_point(size = 4, alpha = 1/2, aes(color = drv))
g+geom_point(aes(color = drv))+labs(title = "Swirl Rules!")+labs(x = "Dsplacement", y = "Hwy Mileage")
g+geom_point(aes(color = drv))+labs(title = "Swirl Rules!")+labs(x = "Displacement", y = "Hwy Mileage")
g+geom_point(aes(color = drv), size = 2, alpha = 1/2)+geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g+geom_point(aes(color = drv))+theme_bw(base_family = "Times")
skip()
skip()
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim = c(-3,3))
skip()
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(metho = "lm", se = FALSE, size = 2, color = "black")
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")+labs(x = "Displacement", y= "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut())
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut
)
skip()
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut)+geom_smooth(method = "lm")
qplot(carat, price, data = diamonds, color = cut, facets = .~cut)+geom_smooth(method = "lm")
g <- qplot(diamonds, aes(depth,price))
g <- ggplot(diamonds, aes(depth,price))
summary(g)
g+geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1, length = 4), na.rm = TRUE)
cutpoints
skip()
g <- ggplot(diamonds, aes(depth, price))
g+geom_point(alpha = 1/3)+facet_grid(cut ~ car2)
myd
diamonds[myd,]
g+geom_point(alpha = 1/3)+facet_grid(cut ~ car2)+geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, price))+geom_boxplot()+facet_grid( . ~ cut)
library(lattice)
xyplot()
bwpl()
?bwplot
str(xyplot())
str(xyplot
)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
setwd("~/Development/Reproducible_Research_P_1")
activities <- read.csv("activity.csv")
open project1.md
```
activities <- read.csv("activity.csv")
View(activities)
activities$date <- as.Date(activities$date)
head(activities)
names(activities)
steps <- aggregate(steps ~ date, data = activities, sum, na.rm = TRUE)
?qplot
library(ggplot2)
?qplot
qplot(x = date, y = steps, geom="histogram")
qplot(x = steps$date, y = steps$steps, geom="histogram")
qplot(x = steps$date, geom="histogram")
qplot(data = steps, geom="histogram")
?hist
hist(x = steps$steps)
hist(x = steps$steps, col = "blue")
summary(steps$steps)
hist(x = steps$steps, col = "blue", breaks = 10)
hist(x = steps$steps, col = "blue", breaks = 20)
hist(x = steps$steps, col = "blue", breaks = 53)
uniques(steps$date)
unique(steps$date)
steps <- aggregate(steps ~ date, data = activities, sum, na.rm = TRUE)
length(steps)
length(steps$date)
mean_per_day <- tapply(activity$steps, activity$interval, mean, na.rm = TRUE)
mean_per_day <- tapply(activities$steps, activities$interval, mean, na.rm = TRUE)
ggplot(mean_per_day, aes() +geom_line() )
ggplot(mean_per_day, aes()) + geom_line()
ggplot(mean_per_day + geom_line()
aSd
ggplot(mean_per_day) + geom_line()
plot(mean_per_day, type="1")
plot(mean_per_day, type="l")
plot(mean_per_day, type="l", col="blue")
max(mean_per_day)
which.max(mean_per_day)
summary(mean_per_day)
names(which.max(mean_per_day))
sum(activities[!!rowSums(!is.na(activities))],)
which(!rowSums(!is.na(activities)))
which(!rowSums(is.na(activities)))
which(!rowSums(!is.na(activities)))
sum(is.na(activities))
complete.cases(activities)
ok <- complete.cases(activities)
sum(!ok)
sum(complete.cases(activities))
sum(!complete.cases(activities))
?na.aggregate
??na.aggregate
activitiesNA <- activities
activitiesNA$steps <- activitiesNA$steps[is.na(activities$steps)] <- activitiesNa$steps
activitiesNA$steps <- activitiesNA$steps[is.na(activitiesNA$steps)] <- activitiesNA$steps
mean(activities$steps)
mean(activitiesNA$steps)
mean(activitiesNA$steps, na.rm = TRUE)
activitiesNA$steps <- activitiesNA$steps[is.na(activitiesNA$steps)] <- mean(activitiesNA$steps, na.rm = TRUE)
steps2 <- aggregate(steps ~ date, data = activitiesNA, sum, na.rm = TRUE)
hist(x = steps2$steps, col = "blue", breaks = 53)
hist(x = steps2$steps, col = "blue)
steps2 <- aggregate(steps ~ date, data = activitiesNA, sum, na.rm = TRUE)
hist(x = steps2$steps, col = "blue)
hist(x = steps2$steps, col = "blue")
steps2 <- aggregate(steps ~ date, data = activitiesNA, sum, na.rm = TRUE)
hist(x = steps2$steps, col = "blue")
